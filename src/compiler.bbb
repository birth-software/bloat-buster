Linux_PROT = bits u32
{
    read: u1,
    write: u1,
    exec: u1,
    sem: u1,
    _: u28,
}

OSProtectionFlags = bits
{
    read: u1,
    write: u1,
    execute: u1,
}

OSMapFlags = bits
{
    private: u1,
    anonymous: u1,
    no_reserve: u1,
    populate: u1,
}

os_reserve = fn (base: u64, protection: OSProtectionFlags, map: OSMapFlags) &u8
{
}

Arena = struct
{
    reserved_size: u64,
    position: u64,
    os_position: u64,
    granularity: u64,
    reserved: [32]u8,
}

minimum_position: u64 = #byte_size(Arena);

ArenaInitialization = struct
{
    reserved_size: u64,
    granularity: u64,
    initial_size: u64,
}

arena_initialize = fn (initialization: ArenaInitialization) &Arena
{
}

[export] main = fn [cc(c)] () s32
{
    return 0;
}
