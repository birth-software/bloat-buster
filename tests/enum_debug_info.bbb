TypeId = enum
{
    void,
    noreturn,
    forward_declaration,
    integer,
    function,
    pointer,
    array,
    enum,
    struct,
    bits,
    alias,
    union,
    unresolved,
    vector,
    floating_point,
    enum_array,
    opaque,
}

Type = struct
{
    arr: [5]u32,
    id: TypeId,
    a: [2]u64,
    b: u64,
}

[export] main = fn [cc(c)] () s32
{
    >t: Type = {
        .id = .integer,
        zero,
    };
    t.arr[0] = 1;
    return 0;
}
